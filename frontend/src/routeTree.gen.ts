/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WaitingsImport } from './routes/waitings'
import { Route as MenusImport } from './routes/menus'
import { Route as LoginImport } from './routes/login'
import { Route as KioskImport } from './routes/kiosk'
import { Route as AdminImport } from './routes/admin'
import { Route as IndexImport } from './routes/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as AdminWaitingsImport } from './routes/admin/waitings'
import { Route as AdminTablesImport } from './routes/admin/tables'
import { Route as AdminSettingsImport } from './routes/admin/settings'
import { Route as AdminServingImport } from './routes/admin/serving'
import { Route as AdminPaymentsImport } from './routes/admin/payments'
import { Route as AdminOrdersImport } from './routes/admin/orders'
import { Route as AdminMenusImport } from './routes/admin/menus'
import { Route as AdminMenuStatsImport } from './routes/admin/menu-stats'
import { Route as AdminKitchenImport } from './routes/admin/kitchen'
import { Route as AdminDashboardImport } from './routes/admin/dashboard'

// Create/Update Routes

const WaitingsRoute = WaitingsImport.update({
  path: '/waitings',
  getParentRoute: () => rootRoute,
} as any)

const MenusRoute = MenusImport.update({
  path: '/menus',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const KioskRoute = KioskImport.update({
  path: '/kiosk',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminWaitingsRoute = AdminWaitingsImport.update({
  path: '/waitings',
  getParentRoute: () => AdminRoute,
} as any)

const AdminTablesRoute = AdminTablesImport.update({
  path: '/tables',
  getParentRoute: () => AdminRoute,
} as any)

const AdminSettingsRoute = AdminSettingsImport.update({
  path: '/settings',
  getParentRoute: () => AdminRoute,
} as any)

const AdminServingRoute = AdminServingImport.update({
  path: '/serving',
  getParentRoute: () => AdminRoute,
} as any)

const AdminPaymentsRoute = AdminPaymentsImport.update({
  path: '/payments',
  getParentRoute: () => AdminRoute,
} as any)

const AdminOrdersRoute = AdminOrdersImport.update({
  path: '/orders',
  getParentRoute: () => AdminRoute,
} as any)

const AdminMenusRoute = AdminMenusImport.update({
  path: '/menus',
  getParentRoute: () => AdminRoute,
} as any)

const AdminMenuStatsRoute = AdminMenuStatsImport.update({
  path: '/menu-stats',
  getParentRoute: () => AdminRoute,
} as any)

const AdminKitchenRoute = AdminKitchenImport.update({
  path: '/kitchen',
  getParentRoute: () => AdminRoute,
} as any)

const AdminDashboardRoute = AdminDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => AdminRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/kiosk': {
      preLoaderRoute: typeof KioskImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/menus': {
      preLoaderRoute: typeof MenusImport
      parentRoute: typeof rootRoute
    }
    '/waitings': {
      preLoaderRoute: typeof WaitingsImport
      parentRoute: typeof rootRoute
    }
    '/admin/dashboard': {
      preLoaderRoute: typeof AdminDashboardImport
      parentRoute: typeof AdminImport
    }
    '/admin/kitchen': {
      preLoaderRoute: typeof AdminKitchenImport
      parentRoute: typeof AdminImport
    }
    '/admin/menu-stats': {
      preLoaderRoute: typeof AdminMenuStatsImport
      parentRoute: typeof AdminImport
    }
    '/admin/menus': {
      preLoaderRoute: typeof AdminMenusImport
      parentRoute: typeof AdminImport
    }
    '/admin/orders': {
      preLoaderRoute: typeof AdminOrdersImport
      parentRoute: typeof AdminImport
    }
    '/admin/payments': {
      preLoaderRoute: typeof AdminPaymentsImport
      parentRoute: typeof AdminImport
    }
    '/admin/serving': {
      preLoaderRoute: typeof AdminServingImport
      parentRoute: typeof AdminImport
    }
    '/admin/settings': {
      preLoaderRoute: typeof AdminSettingsImport
      parentRoute: typeof AdminImport
    }
    '/admin/tables': {
      preLoaderRoute: typeof AdminTablesImport
      parentRoute: typeof AdminImport
    }
    '/admin/waitings': {
      preLoaderRoute: typeof AdminWaitingsImport
      parentRoute: typeof AdminImport
    }
    '/admin/': {
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AdminRoute.addChildren([
    AdminDashboardRoute,
    AdminKitchenRoute,
    AdminMenuStatsRoute,
    AdminMenusRoute,
    AdminOrdersRoute,
    AdminPaymentsRoute,
    AdminServingRoute,
    AdminSettingsRoute,
    AdminTablesRoute,
    AdminWaitingsRoute,
    AdminIndexRoute,
  ]),
  KioskRoute,
  LoginRoute,
  MenusRoute,
  WaitingsRoute,
])

/* prettier-ignore-end */
