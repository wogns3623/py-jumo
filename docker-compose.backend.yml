services:
  db:
    image: postgres:17
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    ports:
      - "5432:5432"
    networks:
      - backend-network

  adminer:
    image: adminer
    restart: always
    depends_on:
      - db
    environment:
      - ADMINER_DESIGN=pepa-linha-dark
    ports:
      - "8080:8080"
    networks:
      - backend-network

  prestart:
    image: "${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}"
    build:
      context: ./backend
    depends_on:
      db:
        condition: service_healthy
        restart: true
    command: bash scripts/prestart.sh
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
      - FRONTEND_HOST=${FRONTEND_HOST?Variable not set}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD?Variable not set}
      - BANK_ACCOUNT_NO=${BANK_ACCOUNT_NO?Variable not set}
      - BANK_ACCOUNT_BIRTHDAY=${BANK_ACCOUNT_BIRTHDAY?Variable not set}
      - BANK_ACCOUNT_PASSWORD=${BANK_ACCOUNT_PASSWORD?Variable not set}
      - BANK_SYNC_INTERVAL_SECOND=${BANK_SYNC_INTERVAL_SECOND?Variable not set}
      - KAKAO_ACCESS_KEY=${KAKAO_ACCESS_KEY?Variable not set}
      - KAKAO_SECRET_KEY=${KAKAO_SECRET_KEY?Variable not set}
      - KAKAO_SERVICE_ID=${KAKAO_SERVICE_ID?Variable not set}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - SENTRY_DSN=${SENTRY_DSN}
    networks:
      - backend-network

  backend:
    image: "${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}"
    restart: always
    depends_on:
      db:
        condition: service_healthy
        restart: true
      prestart:
        condition: service_completed_successfully
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
      - FRONTEND_HOST=${FRONTEND_HOST?Variable not set}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD?Variable not set}
      - BANK_ACCOUNT_NO=${BANK_ACCOUNT_NO?Variable not set}
      - BANK_ACCOUNT_BIRTHDAY=${BANK_ACCOUNT_BIRTHDAY?Variable not set}
      - BANK_ACCOUNT_PASSWORD=${BANK_ACCOUNT_PASSWORD?Variable not set}
      - BANK_SYNC_INTERVAL_SECOND=${BANK_SYNC_INTERVAL_SECOND?Variable not set}
      - KAKAO_ACCESS_KEY=${KAKAO_ACCESS_KEY?Variable not set}
      - KAKAO_SECRET_KEY=${KAKAO_SECRET_KEY?Variable not set}
      - KAKAO_SERVICE_ID=${KAKAO_SERVICE_ID?Variable not set}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - SENTRY_DSN=${SENTRY_DSN}
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-k",
          "-f",
          "https://localhost:8000/api/v1/utils/health-check/",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    build:
      context: ./backend
    command: >
      uvicorn app.main:app 
      --host 0.0.0.0
      --port 8000
      --ssl-keyfile /app/certs/private.key 
      --ssl-certfile /app/certs/certificate.crt
      --ssl-keyfile-password ${SSL_KEY_PASSWORD?Variable not set}
    volumes:
      # SSL 인증서를 마운트하는 볼륨 (실제 인증서 경로로 수정 필요)
      - ${SSL_CERT_PATH?Variable not set}:/app/certs/certificate.crt:ro
      - ${SSL_KEY_PATH?Variable not set}:/app/certs/private.key:ro
    ports:
      - "8000:8000" # HTTPS 포트
    networks:
      - backend-network

volumes:
  app-db-data:

networks:
  backend-network:
    driver: bridge
