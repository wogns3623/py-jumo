"""initialize models

Revision ID: e05a13c6b82e
Revises: 
Create Date: 2025-09-14 20:23:35.321102

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'e05a13c6b82e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('restaurants',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('open_time', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('close_time', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('break_start_time', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('break_end_time', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('menus',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('desc', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('image', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('bg_color', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('no_stock', sa.Boolean(), nullable=False),
    sa.Column('is_instant_serve', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('restaurant_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_menus_category'), 'menus', ['category'], unique=False)
    op.create_index(op.f('ix_menus_name'), 'menus', ['name'], unique=False)
    op.create_index(op.f('ix_menus_restaurant_id'), 'menus', ['restaurant_id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('restaurant_id', sa.Uuid(), nullable=False),
    sa.Column('transaction_by', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('refunded_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payments_restaurant_id'), 'payments', ['restaurant_id'], unique=False)
    op.create_table('tables',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('restaurant_id', sa.Uuid(), nullable=False),
    sa.Column('no', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('idle', 'in_use', 'reserved', name='tablestatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tables_restaurant_id'), 'tables', ['restaurant_id'], unique=False)
    op.create_index(op.f('ix_tables_status'), 'tables', ['status'], unique=False)
    op.create_table('waitings',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('restaurant_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('notified_at', sa.DateTime(), nullable=True),
    sa.Column('entered_at', sa.DateTime(), nullable=True),
    sa.Column('rejected_at', sa.DateTime(), nullable=True),
    sa.Column('rejected_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_waitings_name'), 'waitings', ['name'], unique=False)
    op.create_index(op.f('ix_waitings_phone'), 'waitings', ['phone'], unique=False)
    op.create_index(op.f('ix_waitings_restaurant_id'), 'waitings', ['restaurant_id'], unique=False)
    op.create_table('teams',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('restaurant_id', sa.Uuid(), nullable=False),
    sa.Column('table_id', sa.Uuid(), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['table_id'], ['tables.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_teams_phone'), 'teams', ['phone'], unique=False)
    op.create_index(op.f('ix_teams_restaurant_id'), 'teams', ['restaurant_id'], unique=False)
    op.create_index(op.f('ix_teams_table_id'), 'teams', ['table_id'], unique=False)
    op.execute(sa.schema.CreateSequence(sa.schema.Sequence('orders_no_seq', increment=1, minvalue=0, start=0, cycle=True)))
    op.create_table('orders',
    sa.Column('reject_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('restaurant_id', sa.Uuid(), nullable=False),
    sa.Column('team_id', sa.Uuid(), nullable=False),
    sa.Column('payment_id', sa.Uuid(), nullable=True),
    sa.Column('no', sa.Integer(), server_default=sa.text("nextval('orders_no_seq')"), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_orders_payment_id'), 'orders', ['payment_id'], unique=False)
    op.create_index(op.f('ix_orders_restaurant_id'), 'orders', ['restaurant_id'], unique=False)
    op.create_index(op.f('ix_orders_team_id'), 'orders', ['team_id'], unique=False)
    op.create_table('orderedmenus',
    sa.Column('cooked', sa.Boolean(), nullable=False),
    sa.Column('reject_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('served_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('restaurant_id', sa.Uuid(), nullable=False),
    sa.Column('order_id', sa.Uuid(), nullable=False),
    sa.Column('menu_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['menu_id'], ['menus.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_orderedmenus_menu_id'), 'orderedmenus', ['menu_id'], unique=False)
    op.create_index(op.f('ix_orderedmenus_order_id'), 'orderedmenus', ['order_id'], unique=False)
    op.create_index(op.f('ix_orderedmenus_restaurant_id'), 'orderedmenus', ['restaurant_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_orderedmenus_restaurant_id'), table_name='orderedmenus')
    op.drop_index(op.f('ix_orderedmenus_order_id'), table_name='orderedmenus')
    op.drop_index(op.f('ix_orderedmenus_menu_id'), table_name='orderedmenus')
    op.drop_table('orderedmenus')
    op.drop_index(op.f('ix_orders_team_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_restaurant_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_payment_id'), table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_teams_table_id'), table_name='teams')
    op.drop_index(op.f('ix_teams_restaurant_id'), table_name='teams')
    op.drop_index(op.f('ix_teams_phone'), table_name='teams')
    op.drop_table('teams')
    op.drop_index(op.f('ix_waitings_restaurant_id'), table_name='waitings')
    op.drop_index(op.f('ix_waitings_phone'), table_name='waitings')
    op.drop_index(op.f('ix_waitings_name'), table_name='waitings')
    op.drop_table('waitings')
    op.drop_index(op.f('ix_tables_status'), table_name='tables')
    op.drop_index(op.f('ix_tables_restaurant_id'), table_name='tables')
    op.drop_table('tables')
    op.drop_index(op.f('ix_payments_restaurant_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_menus_restaurant_id'), table_name='menus')
    op.drop_index(op.f('ix_menus_name'), table_name='menus')
    op.drop_index(op.f('ix_menus_category'), table_name='menus')
    op.drop_table('menus')
    op.drop_table('restaurants')
    # ### end Alembic commands ###
