"""add restaurants

Revision ID: c26c98655eb9
Revises: 5fb04e0b5fa0
Create Date: 2025-08-26 00:30:11.377221

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c26c98655eb9'
down_revision = '5fb04e0b5fa0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('restaurants',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('open_time', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('close_time', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('break_start_time', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('break_end_time', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orderedmenus',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('restaurant_id', sa.Uuid(), nullable=False),
    sa.Column('order_id', sa.Uuid(), nullable=False),
    sa.Column('menu_id', sa.Uuid(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('reject_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cook_started_at', sa.DateTime(), nullable=True),
    sa.Column('served_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['menu_id'], ['menus.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_orderedmenus_menu_id'), 'orderedmenus', ['menu_id'], unique=False)
    op.create_index(op.f('ix_orderedmenus_order_id'), 'orderedmenus', ['order_id'], unique=False)
    op.create_index(op.f('ix_orderedmenus_restaurant_id'), 'orderedmenus', ['restaurant_id'], unique=False)
    op.drop_index('ix_menuorders_menu_id', table_name='menuorders')
    op.drop_index('ix_menuorders_order_id', table_name='menuorders')
    op.drop_table('menuorders')
    op.add_column('menus', sa.Column('restaurant_id', sa.Uuid(), nullable=False))
    op.add_column('menus', sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.drop_index('ix_menus_title', table_name='menus')
    op.create_index(op.f('ix_menus_name'), 'menus', ['name'], unique=False)
    op.create_index(op.f('ix_menus_restaurant_id'), 'menus', ['restaurant_id'], unique=False)
    op.create_foreign_key(None, 'menus', 'restaurants', ['restaurant_id'], ['id'])
    op.drop_column('menus', 'title')
    op.add_column('orders', sa.Column('restaurant_id', sa.Uuid(), nullable=False))
    op.alter_column('orders', 'no',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text("nextval('orders_no_seq'::regclass)"))
    op.create_index(op.f('ix_orders_restaurant_id'), 'orders', ['restaurant_id'], unique=False)
    op.create_foreign_key(None, 'orders', 'restaurants', ['restaurant_id'], ['id'])
    op.add_column('payments', sa.Column('restaurant_id', sa.Uuid(), nullable=False))
    op.create_index(op.f('ix_payments_restaurant_id'), 'payments', ['restaurant_id'], unique=False)
    op.create_foreign_key(None, 'payments', 'restaurants', ['restaurant_id'], ['id'])
    op.add_column('tables', sa.Column('restaurant_id', sa.Uuid(), nullable=False))
    op.create_index(op.f('ix_tables_restaurant_id'), 'tables', ['restaurant_id'], unique=False)
    op.create_foreign_key(None, 'tables', 'restaurants', ['restaurant_id'], ['id'])
    op.add_column('teams', sa.Column('restaurant_id', sa.Uuid(), nullable=False))
    op.create_index(op.f('ix_teams_restaurant_id'), 'teams', ['restaurant_id'], unique=False)
    op.create_foreign_key(None, 'teams', 'restaurants', ['restaurant_id'], ['id'])
    op.add_column('waitings', sa.Column('restaurant_id', sa.Uuid(), nullable=False))
    op.create_index(op.f('ix_waitings_restaurant_id'), 'waitings', ['restaurant_id'], unique=False)
    op.create_foreign_key(None, 'waitings', 'restaurants', ['restaurant_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'waitings', type_='foreignkey')
    op.drop_index(op.f('ix_waitings_restaurant_id'), table_name='waitings')
    op.drop_column('waitings', 'restaurant_id')
    op.drop_constraint(None, 'teams', type_='foreignkey')
    op.drop_index(op.f('ix_teams_restaurant_id'), table_name='teams')
    op.drop_column('teams', 'restaurant_id')
    op.drop_constraint(None, 'tables', type_='foreignkey')
    op.drop_index(op.f('ix_tables_restaurant_id'), table_name='tables')
    op.drop_column('tables', 'restaurant_id')
    op.drop_constraint(None, 'payments', type_='foreignkey')
    op.drop_index(op.f('ix_payments_restaurant_id'), table_name='payments')
    op.drop_column('payments', 'restaurant_id')
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.drop_index(op.f('ix_orders_restaurant_id'), table_name='orders')
    op.alter_column('orders', 'no',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text("nextval('orders_no_seq'::regclass)"))
    op.drop_column('orders', 'restaurant_id')
    op.add_column('menus', sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'menus', type_='foreignkey')
    op.drop_index(op.f('ix_menus_restaurant_id'), table_name='menus')
    op.drop_index(op.f('ix_menus_name'), table_name='menus')
    op.create_index('ix_menus_title', 'menus', ['title'], unique=False)
    op.drop_column('menus', 'name')
    op.drop_column('menus', 'restaurant_id')
    op.create_table('menuorders',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('menu_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('order_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('reject_reason', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cook_started_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('served_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['menu_id'], ['menus.id'], name='menuorders_menu_id_fkey'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name='menuorders_order_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='menuorders_pkey')
    )
    op.create_index('ix_menuorders_order_id', 'menuorders', ['order_id'], unique=False)
    op.create_index('ix_menuorders_menu_id', 'menuorders', ['menu_id'], unique=False)
    op.drop_index(op.f('ix_orderedmenus_restaurant_id'), table_name='orderedmenus')
    op.drop_index(op.f('ix_orderedmenus_order_id'), table_name='orderedmenus')
    op.drop_index(op.f('ix_orderedmenus_menu_id'), table_name='orderedmenus')
    op.drop_table('orderedmenus')
    op.drop_table('restaurants')
    # ### end Alembic commands ###
